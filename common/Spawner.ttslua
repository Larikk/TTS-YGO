local CARD_BACK = "https://i.imgur.com/UjbK2Wb.png"

-- LUA Script for spawned containers
local CONTAINER_LUA_SCRIPT = [[
function filterObjectEnter(o)
    return false
end

function onObjectLeaveContainer(container, object)
    if self == container and self.getQuantity() < 1 then
        self.destruct()
    end
end
]]

-- Remarks to the notation:
-- The suffix "Object" means that a variable points to a phsyical TTS object on the board.
-- No suffix means that the variable points to a table with data.
--
-- Examples:
-- packObject = bag/container on the TTS board
-- pack = table which holds data of cards

function AbstractPackGenerator:spawnCard(card, callback)
    spawnParams = {
        type = "Card",
        position = {x = 0, y = 3, z = -5},
        rotation = {x = 0, y = 180, z = 180},
        scale = {x = 1, y = 1, z = 1},
        sound = true,
        snap_to_grid = true,

        callback_function = function(cardObject)
            cardObject.setName(card.name)
            cardObject.setDescription(card.description)
            cardObject.setCustomObject({
                face = card.face,
                back = CARD_BACK
            })

            if type(callback) == "function" then callback(cardObject) end
        end
    }

    spawnObject(spawnParams)
end

function AbstractPackGenerator:spawnPack(pack, callback)
    spawnParams = {
        type = "Custom_Model",
        position = {x = 0, y = 3, z = 10},
        rotation = {x = 0, y = 0, z = 0},
        scale = {x = 1, y = 1, z = 1},
        sound = false,
        snap_to_grid = true,

        callback_function = function(packObject)
            packObject.setName("Pack")
            packObject.setLuaScript(CONTAINER_LUA_SCRIPT)
            packObject.setLock(false)
            packObject.setCustomObject({
                mesh = "http://pastebin.com/raw/xdTHXJJX",
                diffuse = "https://ms.yugipedia.com//b/bc/LOB-BoosterEN.png",
                normal = "http://i.imgur.com/9FUxR04.png",
                type = 6, -- bag
                material = 3 -- cardbord
            })
            packObject = packObject.reload()

            -- we have to get a reference to the object trough the guid for some reason for this to work
            local guid = packObject.getGUID()
            local obj = function() return getObjectFromGUID(guid) end

            -- Iterate backwards because the first inserted element in a bag is at the bottom
            for i = #pack, 1, -1 do
                local card = pack[i]
                self:spawnCard(card, function(cardObject) obj().putObject(cardObject) end)
            end

            Wait.condition(
                function() if type(callback) == "function" then callback(obj()) end end,
                function() return obj().getQuantity() >= self.cardsInPacks end
            )
        end
    }

    spawnObject(spawnParams)
end

function AbstractPackGenerator:spawnBox(packs, callback)
    spawnParams = {
        type = "Custom_Model",
        position = {x = 0, y = 3, z = 15},
        rotation = {x = 0, y = 0, z = 0},
        scale = {x = 1, y = 1, z = 1},
        sound = false,
        snap_to_grid = true,

        callback_function = function(boxObject)
            boxObject.setName("Set Box")
            boxObject.setLuaScript(CONTAINER_LUA_SCRIPT)
            boxObject.setLock(false)
            boxObject.setCustomObject({
                mesh = "http://pastebin.com/raw/Nxkp73RJ",
                diffuse = "http://i.imgur.com/Ld7rhEF.pnghttp://i.imgur.com/Ld7rhEF.png",
                normal = "http://i.imgur.com/gyKUJms.jpg",
                type = 6, -- bag
                material = 3 -- cardbord
            })
            boxObject = boxObject.reload()

            -- we have to get a reference to the object trough the guid for some reason for this to work
            local guid = boxObject.getGUID()
            local obj = function() return getObjectFromGUID(guid) end

            for i, pack in ipairs(packs) do
                self:spawnPack(pack, function(packObject) obj().putObject(packObject) end)
            end

            Wait.condition(
                function() if type(callback) == "function" then callback() end end,
                function() return obj().getQuantity() >= self.packsInBox end
            )
        end
    }

    spawnObject(spawnParams)
end
