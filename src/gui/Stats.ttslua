local state = require("TTS-YGO/src/gui/State")

local module = {}

-- Taken and adjusted from https://github.com/Eldinnie/ttsluastuff/tree/master/stattracker

local STAT_URL = "https://script.google.com/macros/s/AKfycbw-noLG3J8ZeQ-SxbCyLyIZyldGl2s31HDoX91iNA/exec"
local DEBUG = true

local STATE_KEY = "stats:save-id"
local STATE_KEY_CREATION = "stats:save-id-creation"

local ID_RESET_DELTA = 60 * 60 * 24

local function l(s)
    if DEBUG then log(s) end
end

local function ping()
    l("Pinging stats.")
    local form = {
        moment = "ping",
        id = state.get(STATE_KEY),
        num_players = #getSeatedPlayers()
    }
    WebRequest.post(STAT_URL, form, |ret|l(ret.text))
end

local function save_id(w)
    l("Received ID.")
    l(w.text)

    local id = JSON.decode(w.text).id
    state.put(STATE_KEY, id)
    state.put(STATE_KEY_CREATION, math.floor(os.time()))
end

function module.load(initial_wait, interval)
    local initial_wait = initial_wait or 600
    local interval = interval or 120

    local id = state.get(STATE_KEY)
    l("Stats id: " .. (id or "nil"))

    -- Check how old the session is
    if id then
        local id_creation = state.get(STATE_KEY_CREATION)
        local now = math.floor(os.time())
        if now - id_creation > ID_RESET_DELTA then
            l("ID was created more then 24 hours ago, requesting new one.")
            id = nil
            state.put(STATE_KEY, nil)
            state.put(STATE_KEY_CREATION, nil)
        end
    end

    if not id then
        l("No ID so setting timer to request new one.")
        function get_id()
            WebRequest.post(STAT_URL, {moment="start", num_players=#getSeatedPlayers(), delay=initial_wait}, save_id)
            Wait.time(ping, interval, -1)
        end
        Wait.time(get_id, initial_wait)
    else
        l("Session already started (rewinded?) only setting interval")
        Wait.time(ping, interval, -1)
    end
end

return module
