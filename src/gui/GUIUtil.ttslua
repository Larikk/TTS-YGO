
local util = {}

function util.getElementById(id, root)
    if type(root) ~= "table" then return nil end

    for _,v in pairs(root) do
        if v.attributes ~= nil and v.attributes.id == id then
            return v
        end

        local temp = util.getElementById(id, v)
        if temp ~= nil then return temp end
    end

    return nil
end

function util.createNavBar(title, additionalChildren)
    additionalChildren = additionalChildren or {}

    local children = {}

    table.insert(children, {
        tag = "Text",
        attributes = {
            class = "nav-bar",
            flexibleWidth = "1"
        },
        value = title
    })

    for _,e in pairs(additionalChildren) do table.insert(children, e) end

    return {
        tag = "HorizontalLayout",
        attributes = {
            class = "nav-bar"
        },
        children = children
    }
end

function util.createBox(title, description, content)
    local children = {}

    table.insert(children, {
        tag = "Text",
        attributes = {
            class = "box-title",
        },
        value = title
    })

    if description ~= nil and description ~= "" then
        table.insert(children, {
            tag = "Text",
            attributes = {
                class = "box-description",
            },
            value = description
        })
    end

    table.insert(children, content)

    return {
        tag = "VerticalLayout",
        attributes = {
            class = "box",
            flexibleWidth = "1"
        },
        children = children
    }
end

function util.createAlignedButton(id, text, color, alignment)
    return {
        tag = "HorizontalLayout",
        attributes = {
            childAlignment = alignment,
            flexibleWidth = "1",
        },
        children = {
            tag = "Button",
            attributes = {
                id = id,
                class = color .. " button",
                onClick = "handleEvent",
            },
            value = text
        }
    }
end

return util
