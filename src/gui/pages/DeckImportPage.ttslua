local guiUtil = require("TTS-YGO/src/gui/GUIUtil")
local state = require("TTS-YGO/src/gui/State")
local ydkImport = require("TTS-YGO/src/deck-import/YdkImport")
local ydkeImport = require("TTS-YGO/src/deck-import/YdkeImport")


local module = {}

local page = nil

-- IDs of elements
local PAGE_ID = "deck-import"
local DECK_INPUT = PAGE_ID .. ":deck-input"
local MODE_DROPDOWN = PAGE_ID .. ":mode"
local IMPORT_BUTTON = PAGE_ID .. ":import-button"
local CLEAR_BUTTON = PAGE_ID .. ":clear-button"

local LABEL_YDK_FILE = "YDK File"
local LABEL_YDKE = "YDKe Link"

local INDEX_YDK_FILE = 0
local INDEX_YDKE = 1

local MODE_YDK_FILE = "ydk-file"
local MODE_YDKE = "ydke"

local YDK_FILE_MODE_PLACEHOLDER = [[
#created by Larikk
#main
89631139
89631139
89631139
#extra
23995346
23995346
!side
55144522
38517737
38517737
]]
local YDKE_MODE_PLACEHOLDER = "ydke://o6lXBaOpVwWjqVcF!0iNuAdIjbgE=!SnBJA+m7SwLpu0sC!"

local function createBody()
    local title = {
        tag = "Text",
        attributes = {
            class = "box-title",
        },
        value = "Insert a YDKe link or the contents of a YDK file here"
    }

    local input = {
        tag = "InputField",
        attributes = {
            id = DECK_INPUT,
            class = "deck-input",
            placeholder = "foo",
            onValueChanged = "handleInputChange",
            flexibleHeight = "1",
            flexibleWidth = "1",
        }
    }

    local modeSelection = {
        tag = "HorizontalLayout",
        attributes = {
            flexibleWidth = "1",
            childAlignment = "MiddleLeft",
            spacing = "40",
        },
        children = {
            {
                tag = "Text",
                value = "Mode: ",
                attributes = {
                    fontSize = "100",
                }
            },
            {
                tag = "Dropdown",
                attributes = {
                    id = MODE_DROPDOWN,
                    onValueChanged = "handleEvent",
                    class = "dropdown",
                    dropdownHeight = "800", -- Must be 200 * #items
                },
                children = {
                    {
                        tag = "Option",
                        value = LABEL_YDK_FILE,
                        attributes = {
                            selected = "true",
                            id = MODE_YDK_FILE,
                        }
                    },
                    {
                        tag = "Option",
                        value = LABEL_YDKE,
                        attributes = {
                            id = MODE_YDKE,
                        }
                    },
                }
            }
        }
    }

    local actionButtons = {
        tag = "HorizontalLayout",
        attributes = {
            childAlignment = "MiddleRight",
            flexibleWidth = "1",
            spacing = "20",
        },
        children = {
            guiUtil.createButton(CLEAR_BUTTON, "Clear", "red"),
            guiUtil.createButton(IMPORT_BUTTON, "Import", "green"),
        }
    }

    local buttonBar = {
        tag = "HorizontalLayout",
        attributes = {
            flexibleWidth = "1",
        },
        children = {
            modeSelection,
            actionButtons,
        }
    }

    return {
        tag = "VerticalLayout",
        attributes = {
            class = "page-body"
        },
        children = { title, input, buttonBar },
    }
end


local function createPage()
    return {
        tag = "VerticalLayout",
        attributes = {
            class = "page"
        },
        children = {
            guiUtil.createNavBar("Import YDK File"),
            createBody()
        },
    }
end

function updateDeckInputPlaceholder()
    local inputPlaceholder = YDK_FILE_MODE_PLACEHOLDER
    if state.get(MODE_DROPDOWN) == MODE_YDKE then
        inputPlaceholder = YDKE_MODE_PLACEHOLDER
    end
    self.UI.setAttribute(DECK_INPUT, "placeholder", inputPlaceholder)
end

function module.afterRender()
    self.UI.setAttribute(DECK_INPUT, "text", state.get(DECK_INPUT))

    local dropdownValue = INDEX_YDK_FILE
    if state.get(MODE_DROPDOWN) == MODE_YDKE then
        dropdownValue = INDEX_YDKE
    end
    self.UI.setAttribute(MODE_DROPDOWN, "value", dropdownValue)
    updateDeckInputPlaceholder()
end

function setMode(option)
    local mode = MODE_YDK_FILE
    if option == LABEL_YDKE then
        mode = MODE_YDKE
    end

    state.put(MODE_DROPDOWN, mode)
    updateDeckInputPlaceholder()
end

function spawnDeck()
    local pos = state.getSpawnPosition()
    local rotation = state.getSpawnRotation()
    rotation = rotation + Vector(0, 0, 180)
    local deck = state.get(DECK_INPUT)
    local mode = state.get(MODE_DROPDOWN)

    if mode == MODE_YDKE then
        ydkeImport.spawn(deck, pos, rotation)
    else
        ydkImport.spawn(deck, pos, rotation)
    end
end

function clearInput()
    self.UI.setAttribute(DECK_INPUT, "text", "")
    state.put(DECK_INPUT, "")
end

function module.getPageObject()
    if page == nil then
        module.eventHandlers = {
            [MODE_DROPDOWN] = setMode,
            [IMPORT_BUTTON] = spawnDeck,
            [CLEAR_BUTTON] = clearInput,
        }

        page = createPage()
    end

    return page
end

return module
