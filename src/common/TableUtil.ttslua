local module = {}

function module.distinct(input)
    local output = {}
    local encountered = {}

    for _,v in ipairs(input) do
        if not encountered[v] then
            table.insert(output, v)
            encountered[v] = true
        end
    end

    return output
end

function module.toSet(table)
    local set = {}
    for _, v in ipairs(table) do
        set[v] = true
    end
    return set
end

function module.flatten(table)
    local list = {}
    for _, section in pairs(table) do
        for _, element in pairs(section) do
            table.insert(list, element)
        end
    end
    return list
end

function module.keys(table)
    local keys = {}
    for k, _ in pairs(table) do
        table.insert(keys, k)
    end
    return keys
end

function module.copy(table)
    local copy = {}
    for k, v in pairs(table) do
        copy[k] = v
    end
    return copy
end

return module
